<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-07-18T21:49:47+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">App Design From Scratch – Intro and Wireframes</title><link href="http://localhost:4000/articles/app-design-from-scratch-intro-and-wireframes/" rel="alternate" type="text/html" title="App Design From Scratch – Intro and Wireframes" /><published>2019-05-25T00:00:00+01:00</published><updated>2019-05-25T00:00:00+01:00</updated><id>http://localhost:4000/articles/app-design-from-scratch-intro-and-wireframes</id><content type="html" xml:base="http://localhost:4000/articles/app-design-from-scratch-intro-and-wireframes/">&lt;p&gt;This week a friend of mine reached out to me asking if I had interest in designing an app for a company that he was working for.&lt;/p&gt;

&lt;p&gt;He had spent this last month helping a law firm here in Portugal to develop a new Android app to help people dispute unfair driving tickets. However, even though they already had the flow more or less defined, they still had to find a designer to design the entire app – and that’s where I come in! It’s a pretty interesting idea and I would definitely use it if needed.&lt;/p&gt;

&lt;p&gt;I’ll be writing about my process in “real time”, so let’s go!&lt;/p&gt;

&lt;h3 id=&quot;meeting-the-client-and-project-introduction&quot;&gt;Meeting the client and project introduction&lt;/h3&gt;
&lt;p&gt;So, after I said my friend I was interested in being a part of this project, I was introduced to the client. We shared a couple of emails where they gave me a high-level description of their ideas, and we ended up scheduling a Skype call the day after, to get into a bit more detail.&lt;/p&gt;

&lt;p&gt;The day after, we had the call and I got to understand with a bit more clearly what they wanted to build and some of the challenges we would have to overcome.&lt;/p&gt;

&lt;p&gt;They also shared with me a Sketch document where they had outlined their idea of what the app’s flow could be. It was actually pretty good already, but I wanted to make a few suggestions for a few things that could be improved.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; One thing I really want to get better at is at communicating. It’s extremely important to have clarity on what the client wants, on the goals, and on what problem we’re solving for a certain audience of people. From my small experience on dealing with client projects, I think it’s a major step for a successful project, both for them, for you, and for the end user. A fantastic resource that is helping me on this (and a lot more) is &lt;a href=&quot;https://www.youtube.com/user/TheSkoolRocks&quot;&gt;The Futur&lt;/a&gt;. Please check them out, I promise you won’t regret it.&lt;/p&gt;

&lt;h3 id=&quot;next-step-sketches-and-wireframes&quot;&gt;Next step: sketches and wireframes&lt;/h3&gt;
&lt;p&gt;After the call, I had everything I needed to get started. The first thing I did was to study the flow they developed. Like I mentioned above, this was already quite good. But I wanted to improve it.&lt;/p&gt;

&lt;p&gt;I first reached out to my notebook and quickly sketched the main steps of the flow, and then started to build wireframes on Sketch. I’m starting from scratch so that I can focus more on each and every step. Here’s what I have at the moment:&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-05-25-app-design-from-scratch-intro-and-wireframes/wireframes-2.jpg&quot; alt=&quot;ByVasco - Basic wireframes for the app flow&quot; /&gt;
  &lt;/figure&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-05-25-app-design-from-scratch-intro-and-wireframes/wireframes.jpg&quot; alt=&quot;ByVasco - Basic wireframes for the app flow&quot; /&gt;
    &lt;figcaption class=&quot;text-smaller caption&quot;&gt;Basic wireframes for the app flow&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;p&gt;Here’s how this will work: We want to allow a user to enter the date a photo of the ticket and then send it. This information will be received by the lawyers and they’s verification if it’s possible to dispute the ticket. If it’s possible, they’ll inform the user, and then proceed to open a process. Both the verification and the process will need to payed by the user.&lt;/p&gt;

&lt;p&gt;Once a process is open, the user will be constantly updated on its status through the app.&lt;/p&gt;

&lt;p&gt;And that’s basically it. At the moment I’m writing this I already sent and had feedback from the client on my ideas for the flow I built with the wireframes (they loved it, yey!). Today is Friday and I’m hoping that by Sunday I already tested this with a few people to see if they can go through the app with ease. If everything goes fine, I’ll start with the thinking about visuals and making things pretty!&lt;/p&gt;

&lt;h3 id=&quot;communication-and-getting-feedback&quot;&gt;Communication, and getting feedback&lt;/h3&gt;
&lt;p&gt;Let me just quickly explain how I’m doing this. To talk with the client, I created a Slack workspace where I added the client and the developer so that we can message each other easily. And to demonstrate them my ideas for the flow, instead of just sending them pictures of the Sketch artboards, I build a quick prototype, recorded my screen (and me, explaining the steps) using QuickTime, uploaded to YouTube as a non-listed video and sent them the link.&lt;/p&gt;

&lt;p&gt;Well, and that’s it for now! See you soon on the next “episode”&lt;/p&gt;</content><author><name></name></author><summary type="html">This week a friend of mine reached out to me asking if I had interest in designing an app for a company that he was working for.</summary></entry><entry><title type="html">How I built my blog and website using Jekyll</title><link href="http://localhost:4000/articles/how-i-built-my-blog-and-website-using-jekyll/" rel="alternate" type="text/html" title="How I built my blog and website using Jekyll" /><published>2019-04-16T00:00:00+01:00</published><updated>2019-04-16T00:00:00+01:00</updated><id>http://localhost:4000/articles/how-i-built-my-blog-and-website-using-jekyll</id><content type="html" xml:base="http://localhost:4000/articles/how-i-built-my-blog-and-website-using-jekyll/">&lt;p&gt;I’ve finally launched the blog here on my website! I wanted to do this for some time, because I want to start writing more and I want to build like an online home for myself, to host all my projects, my ideas, my thoughts, and even though I also share &lt;a href=&quot;https://medium.com/@byvasco&quot;&gt;my words on Medium&lt;/a&gt;, it’s a good idea to have my own blog as well, so I can get full control.&lt;/p&gt;

&lt;h3 id=&quot;too-long-didnt-read&quot;&gt;Too long, didn’t read&lt;/h3&gt;
&lt;p&gt;This turned out to be kind of a large post, so here’re the some links for the different sections.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#intro-to-jekyll&quot;&gt;Intro to Jekyll&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#markdown&quot;&gt;Markdown&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#getting-started&quot;&gt;Getting started&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#setting-up-jekyll&quot;&gt;Setting up Jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#project-structure&quot;&gt;Project structure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#overriding-the-default-theme&quot;&gt;Overriding the default theme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-pages-home&quot;&gt;Creating pages - Home&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#using-variables&quot;&gt;Using variables&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#adding-logic&quot;&gt;Adding logic&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#using-includes&quot;&gt;Using includes&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-pages-articles&quot;&gt;Creating pages - Articles&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#using-loops&quot;&gt;Using loops&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#creating-articles&quot;&gt;Creating articles&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#using-drafts&quot;&gt;Using drafts&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#adding-the-styles&quot;&gt;Adding the styles&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#deploying-to-netlify&quot;&gt;Deploying to Netlify&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#using-the-cli&quot;&gt;Using the CLI&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;intro-to-jekyll&quot;&gt;Intro to Jekyll&lt;/h3&gt;
&lt;p&gt;Amongst a lot of options of platforms that I could’ve used to build this, I choose &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;, which is a static site generator.
So, you have a bunch of source files in your local machine, and you can “compile” them into plain HTML/CSS/JavaScript. There are a lot of articles out there that do a much better job explaining how this works. &lt;a href=&quot;https://wsvincent.com/what-is-a-static-site-generator/&quot;&gt;This one&lt;/a&gt; by Will Vincent, &lt;a href=&quot;https://dev.to/ruthreyer/what-are-static-site-generators-356p&quot;&gt;or this&lt;/a&gt; by Ruth Reyer are great.&lt;/p&gt;

&lt;p&gt;For me, there are two main reasons to use a static site generator, in this case being Jekyll:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Cost&lt;/strong&gt;: It’s super low cost to something like this. I basically just pay for my domain name, because I use Netlify to host my files.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Simplicity&lt;/strong&gt;: There are a lot of things that an SSG doesn’t allow you to do. But for my needs, it’s just perfect. I can write articles, I can create static pages, make a portfolio (which I’ll eventually create), and that’s about it. I don’t need much more than that.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There are other great reasons to use something like this, like security, scalability, and speed for example.&lt;/p&gt;

&lt;h4 id=&quot;markdown&quot;&gt;Markdown&lt;/h4&gt;
&lt;p&gt;Another thing before we get started. To write articles on Jekyll, we’ll use &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; which is text-to-HTML markup language.&lt;/p&gt;

&lt;p&gt;If you’re not familiar with it, I recommend you to watch &lt;a href=&quot;https://www.youtube.com/watch?v=HUBNt18RFbo&amp;amp;t=971s&quot;&gt;this video&lt;/a&gt; by Brad Traversy, check out &lt;a href=&quot;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&quot;&gt;this cheat sheet&lt;/a&gt;, or just search the web!&lt;/p&gt;

&lt;h3 id=&quot;getting-started&quot;&gt;Getting started&lt;/h3&gt;
&lt;p&gt;The first step was to design my website. This is probably the 1000th version, but this time I’m certain this one is here to stay. It’s super basic, and it currently only has a couple of pages: Home and Articles (and the  Article page of course). Here’s how it looks:&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-04-16-how-i-built-my-blog-and-website-using-jekyll/home-articles-pages.jpg&quot; alt=&quot;ByVasco - Home and Articles page design&quot; /&gt;
    &lt;figcaption class=&quot;text-smaller caption&quot;&gt;Home and Articles page&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;p&gt;Ok, nice, the design is done. I can add and make things better later on, but for now, it’s perfect.&lt;/p&gt;

&lt;h3 id=&quot;setting-up-jekyll&quot;&gt;Setting up Jekyll&lt;/h3&gt;
&lt;p&gt;Being no expert on web development (I’m still in the beginning phases of my journey), this how-to Jekyll “guide” will be written in a super non-technical way. Also, I’m using MacOS, but I assume that it won’t change a lot for Windows.&lt;/p&gt;

&lt;p&gt;The first thing you’ll want to do is to install it on your computer. Open up your terminal, and run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;bundler jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will install &lt;a href=&quot;https://bundler.io/&quot;&gt;Bundler&lt;/a&gt; and Jekyll. Bundler is a tool that allows you to install all your project gems in a single command.&lt;/p&gt;

&lt;p&gt;Next, go to the directory where you want to have your website files, and run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll new my-website
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will create a new directory called “my-website” (you can name it whatever you want). Now, navigate into that directory:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;my-website
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And run:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will run the server, so go ahead and open your browser, navigate to &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; , and there it is, your Jekyll website!&lt;/p&gt;

&lt;h3 id=&quot;project-structure&quot;&gt;Project structure&lt;/h3&gt;
&lt;p&gt;By default, Jekyll will create a few files for you:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; this is your configuration file.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;404.html&lt;/code&gt; the page that gets rendered on the browser when there’s a 404 error.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt; a .md file with the content for your Home page.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;about.md&lt;/code&gt; a .md file with the content for your About page.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile.lock&lt;/code&gt; the files that allow you to manage all your required gems for the project.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And a couple of directories:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; this is the directory that contains all the HTML, CSS and JavaScript files after Jekyll “compiles” everything. It’s what you’ll want to deploy to the server later on.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; where all your posts’ files live.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When we created the website using the &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new&lt;/code&gt; command, Jekyll will build the site using a default gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;. This means that there are some files and directories that are stored in the theme’s gem, and we don’t have access to them.&lt;/p&gt;

&lt;h3 id=&quot;overriding-the-default-theme&quot;&gt;Overriding the default theme&lt;/h3&gt;

&lt;p&gt;In my case, I wanted to completely override this with my own styles and structure. To do this, I first opened the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; file and deleted this line:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_config.yml&lt;/p&gt;
&lt;div class=&quot;language-yml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;theme&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;minima&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And I also deleted the &lt;code class=&quot;highlighter-rouge&quot;&gt;about.md&lt;/code&gt; file because I don’t have an About page right now.&lt;/p&gt;

&lt;p&gt;Then I created some new directories:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt; to store all the blog drafts.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; to store HTML blocks like the site header or footer.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; to store the layouts for the pages, like the articles page.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;_sass&lt;/code&gt; where all the Sass files are.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; where we’ll place all the assets we need, like images.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s how my site structure is looking at this stage:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── Gemfile
├── Gemfile.lock
├── assets
├── _sass
├── _config.yml
├── _drafts
├── _includes
├── _layouts
├── _posts
│   └── 2019-04-11-welcome-to-jekyll.md
└── index.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, if you try to open your site, everything will be empty. The reason why is because of how Jekyll works with pages and layouts. I’ll try to explain this in the next section.&lt;/p&gt;

&lt;h3 id=&quot;creating-pages---home&quot;&gt;Creating pages - Home&lt;/h3&gt;
&lt;p&gt;Let’s first open up that &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt; and check out what’s inside.&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;index.md&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
# Feel free to add content and custom Front Matter to this file.
# To modify the layout, see https://jekyllrb.com/docs/themes/#overriding-theme-defaults

layout: home
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is the file where I’ll place all the content for my home page.&lt;/p&gt;

&lt;p&gt;And as you can see, it’s almost empty. That block of code at the start of the file, enclosed by these triple dashes is called &lt;em&gt;front matter&lt;/em&gt;. This is the place where we can set variables that allow us to control a few things.&lt;/p&gt;

&lt;p&gt;Right now, there’s only that &lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt; variable, with a &lt;code class=&quot;highlighter-rouge&quot;&gt;home&lt;/code&gt; value. This means that the index page will use a &lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt; called &lt;code class=&quot;highlighter-rouge&quot;&gt;home&lt;/code&gt;. But because we deleted the line in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; that said to Jekyll to use the Minima theme, it now has no &lt;code class=&quot;highlighter-rouge&quot;&gt;home&lt;/code&gt; layout to point to. Let’s fix this.&lt;/p&gt;

&lt;p&gt;A layout is basically an HTML file, that as a basic structure, and where we can insert content dynamically. So, let’s create a new file inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; directory, named &lt;code class=&quot;highlighter-rouge&quot;&gt;home.html&lt;/code&gt;, and add  this code inside:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_layouts/home.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;My Jekyll Site&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    {{ content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;using-variables&quot;&gt;Using variables&lt;/h4&gt;
&lt;p&gt;This is a basic HTML structure, but take a look at that &lt;code class=&quot;highlighter-rouge&quot;&gt;{{ content }}&lt;/code&gt;. That’s a &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; tag. Liquid is a template language created by &lt;a href=&quot;https://shopify.com&quot;&gt;Shopify&lt;/a&gt;, and in very simple terms, it allows us to introduce dynamic content inside our pages. And those double &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt; are used to output the contents of &lt;strong&gt;a variable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In this case, it’s outputting a variable named &lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt;. But if you open up your site in the browser, it is still completely empty. That’s because &lt;code class=&quot;highlighter-rouge&quot;&gt;content&lt;/code&gt; holds whatever you typed in your &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;So, let’s try this out. Open up &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;, and type whatever you want after the end of the Front Matter. Here’s mine:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;index.md&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: home
---

Hello world! This is comming directly from the index.md file.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Go to &lt;a href=&quot;http://localhost:4000&quot;&gt;localhost:4000&lt;/a&gt;, and this is what you be seeing:&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-04-16-how-i-built-my-blog-and-website-using-jekyll/jekyll-basic-site.jpg&quot; alt=&quot;Jekyll basic site&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;Fantastic! Now, let’s try another thing. In your &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;, add another variable to the front matter. Here’s mine:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;index.md front matter&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: home
title: My Jekyll Site
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now go back to your &lt;code class=&quot;highlighter-rouge&quot;&gt;home.html&lt;/code&gt;, and instead of having the page title hardcoded inside those &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;title&amp;gt;&lt;/code&gt; tags, place your &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; variable in there, like this:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;home.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    {{ content }}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that we had to use &lt;code class=&quot;highlighter-rouge&quot;&gt;{{ page.title }}&lt;/code&gt; instead of just &lt;code class=&quot;highlighter-rouge&quot;&gt;{{ title }}&lt;/code&gt;, because the &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; variable is in the front matter of that page. It’s a variable within the context of a page.&lt;/p&gt;

&lt;p&gt;In my case, I did some other stuff in the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;. I’ve changed the layout to one named &lt;code class=&quot;highlighter-rouge&quot;&gt;default&lt;/code&gt;, and added a &lt;code class=&quot;highlighter-rouge&quot;&gt;page-name&lt;/code&gt; variable. You’ll see why I did that, next.&lt;/p&gt;

&lt;p&gt;Here’s my &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;index.md&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: default
title: A designer and developer creating things for the digital world
page-name: home
---

&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;home-intro&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;intro-text title-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hey, I’m Vasco! A designer and developer creating things for the digital world, from &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;location&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Lisbon&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;country body-small&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;(Portugal)&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;home-details&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-narrow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content-section&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;During the day I work in-house at &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.hole19golf.com/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Hole19 Golf&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;, where I’m helping to build the best platform for golfers.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;During the night, I get busy learning new things, building my own projects, reading and fixing my old cars.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content-section&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I’m currently building a community for old Volkswagen lovers, making a website for my friend Ana Guerra, and learning JavaScript.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;content-section&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Get in touch by reaching out at &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mailto:hello@byvasco.com&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;hello@byvasco.com&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;Join me on &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://medium.com/@byvasco&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Medium&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://twitter.com/vascogmm&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Twitter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt; and &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.instagram.com/byvasco/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Instagram&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;, view on-going work on &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://dribbble.com/byvasco&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Dribbble&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;, and my code on &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/vascomarques&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Github&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And here’s my new layout &lt;code class=&quot;highlighter-rouge&quot;&gt;default.html&lt;/code&gt;&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;default.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page-name&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page-{{ page.page-name }}&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      {{ content }}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Everything’s basically the same, except that weird thing in the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;main&amp;gt;&lt;/code&gt; tag that looks like an if statement. That’s because it is!&lt;/p&gt;

&lt;h4 id=&quot;adding-logic&quot;&gt;Adding logic&lt;/h4&gt;
&lt;p&gt;Here’s what’s going on with that &lt;em&gt;if statement&lt;/em&gt;: as you can see, I’ve added a &lt;code class=&quot;highlighter-rouge&quot;&gt;page-name&lt;/code&gt; variable to the &lt;em&gt;front matter&lt;/em&gt; of my &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;What I want to do with this, is to add a dynamic class name to the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;main&amp;gt;&lt;/code&gt;HTML tag, so that I can manipulate things differently on my CSS. But if there’s no &lt;code class=&quot;highlighter-rouge&quot;&gt;page-name&lt;/code&gt; variable available, I don’t want to add any class.&lt;/p&gt;

&lt;p&gt;Liquid logical statements are pretty easy to make. Here’s basically the same thing that I have up there, but formatted in different lines:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  class=&quot;page-&lt;span class=&quot;p&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}}&lt;/span&gt;&quot;
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also add &lt;em&gt;elsif&lt;/em&gt; and &lt;em&gt;else&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  do something
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;elsif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  do something else
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
  do something else
&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;using-includes&quot;&gt;Using includes&lt;/h4&gt;
&lt;p&gt;Before I talk about includes, there are some other things that I want to add to my &lt;code class=&quot;highlighter-rouge&quot;&gt;default.html&lt;/code&gt; layout.&lt;/p&gt;

&lt;p&gt;Firstly, I want to add some more stuff inside &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;default.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }} | ByVasco&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/favicon.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page-name&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page-{{ page.page-name }}&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      {{ content }}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Awesome. You can see that I’ve added a few &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tags, linked my &lt;code class=&quot;highlighter-rouge&quot;&gt;main.css&lt;/code&gt; file (more on that later), and a &lt;em&gt;favicon&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, I want to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; for my website:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;default.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }} | ByVasco&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/favicon.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header-main&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container grid-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header-navigation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/articles&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Articles&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
        
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page-name&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page-{{ page.page-name }}&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      {{ content }}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok, and it’s done. This is fine, it works! However, what would happen if I wanted to create another layout file, let’s say an &lt;code class=&quot;highlighter-rouge&quot;&gt;article.html&lt;/code&gt; layout? I would have to repeat all that &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; code. There’s a better way to do this, and it’s using includes.&lt;/p&gt;

&lt;p&gt;When I was creating the directories inside the site’s root, I created an &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; directory. Let’s create a file inside that directory, named &lt;code class=&quot;highlighter-rouge&quot;&gt;head.html&lt;/code&gt;, and put all the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt; code inside it:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_includes/head.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width=device-width, initial-scale=1.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;X-UA-Compatible&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;ie=edge&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;{{ page.title }} | ByVasco&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/assets/css/main.css&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;shortcut icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;image/png&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/favicon.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now that we’re here, let’s do the same thing, but for the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; code, and I’ll also create another one for the site &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;footer&amp;gt;&lt;/code&gt;. So, create a &lt;code class=&quot;highlighter-rouge&quot;&gt;header.html&lt;/code&gt; file and put its code inside:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_includes/header.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header-main&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container grid-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header-navigation&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/articles&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Articles&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;logo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And on &lt;code class=&quot;highlighter-rouge&quot;&gt;footer.html&lt;/code&gt;:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_layouts/footer.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;footer&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;footer-main&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container grid-2&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mailto:hello@byvasco.com&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Email&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;social-links&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://dribbble.com/byvasco&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Dribbble&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://medium.com/@byvasco&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Medium&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.instagram.com/byvasco/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Instagram&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.twitter.com/vascogmm/&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Twitter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://github.com/vascomarques&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;target=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;_blank&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;link-nav&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Github&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/footer&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, got to the &lt;code class=&quot;highlighter-rouge&quot;&gt;default.html&lt;/code&gt; file, remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&lt;/code&gt;and the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;header&amp;gt;&lt;/code&gt; code, and type this in:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_layouts/default.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  {% include head.html %}

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    {% include header.html %}

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;main&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;page&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;page-name&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page-{{ page.page-name }}&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{%&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;endif&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%}&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      {{ content }}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, instead of having to repeat all that code for every layout, we can just include them where we want them to be. Another advantage of doing this is that if we want to change something in our code, we just need to change it once, and it will reflect those changes everywhere.&lt;/p&gt;

&lt;p&gt;When using &lt;code class=&quot;highlighter-rouge&quot;&gt;include&lt;/code&gt;, you just need to make sure the file exists in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; directory. As you can see, to include a file it’s as easy as this:&lt;/p&gt;
&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can also organize your include files in directories, and access them like this:&lt;/p&gt;
&lt;div class=&quot;language-liquid highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;directory/filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;%}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Awesome, we’re done here. Now I’ll just quickly create another layout file, and I’ll name it &lt;code class=&quot;highlighter-rouge&quot;&gt;article.html&lt;/code&gt;. This is the layout that I’ll use to render my individual articles.&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_layouts/article.html&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  {% include head.html %}

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    {% include header.html %}

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;article&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-full&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-header&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-title title-1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ page.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;time&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ page.date | date: '%B %d, %Y' }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-narrow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;      
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-content&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          {{ content }}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;

    {% include footer.html %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By the way, take a look at how I’m outputting &lt;code class=&quot;highlighter-rouge&quot;&gt;page.date&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{{ page.date | date: '%B %d, %Y' }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;I’m using what’s called a &lt;em&gt;filter&lt;/em&gt;. I won’t get into much detail, but just know that in this &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; case, we can format it in different ways. Using that format, the date will be showed like this: “April 11, 2019”. Here’s a useful list of &lt;a href=&quot;http://alanwsmith.com/jekyll-liquid-date-formatting-examples&quot;&gt;Jekyll date formatting examples&lt;/a&gt;, written by Alan Smith.&lt;/p&gt;

&lt;p&gt;The Home page is done, and we have all the necessary layouts and includes. Now it’s time to take care of the Articles page.&lt;/p&gt;

&lt;h3 id=&quot;creating-pages---articles&quot;&gt;Creating pages - Articles&lt;/h3&gt;
&lt;p&gt;First, let’s just take an overview of our file structure.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── Gemfile
├── Gemfile.lock
├── assets
├── _sass
├── _config.yml
├── _drafts
├── _includes
│   ├── head.html
│   ├── header.html
│   └── footer.html
├── _layouts
│   ├── default.html
│   └── article.html
├── _posts
│   └── 2019-04-11-welcome-to-jekyll.md
└── index.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ok, time to create the &lt;code class=&quot;highlighter-rouge&quot;&gt;articles.md&lt;/code&gt; file:&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;articles.md&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: default
title: Articles
page-name: articles
---

&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;header-page&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title-2 page-title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;My thoughts and ideas into words.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;section&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;page-content section-articles&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;container-narrow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;articles-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      {% for post in site.posts %}
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-preview&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-title body-large&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;time&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.date | date: '%B %d, %Y' }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
      {% endfor %}
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Almost the same as the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt;, but using something new: a &lt;em&gt;for loop&lt;/em&gt;. Let’s take a quick look at it, and how it’s used to display all the articles.&lt;/p&gt;

&lt;h4 id=&quot;using-loops&quot;&gt;Using loops&lt;/h4&gt;
&lt;p&gt;You’re probably familiar with how &lt;em&gt;for loops&lt;/em&gt; work. Here we use it to iterate through &lt;code class=&quot;highlighter-rouge&quot;&gt;site.posts&lt;/code&gt; (&lt;code class=&quot;highlighter-rouge&quot;&gt;site&lt;/code&gt; is a global variable, that contains all the &lt;code class=&quot;highlighter-rouge&quot;&gt;posts&lt;/code&gt;). We can now display a block of code for every existing &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt;. In this case, I created an &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;li&amp;gt;&lt;/code&gt; with the &lt;code class=&quot;highlighter-rouge&quot;&gt;post.title&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;post.date&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{% for post in site.posts %}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-preview&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{{ post.url }}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-title body-large&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.title }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;time&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;article-date&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;{{ post.date | date: '%B %d, %Y' }}&lt;span class=&quot;nt&quot;&gt;&amp;lt;/time&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
{% endfor %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So, you start the loop with &lt;code class=&quot;highlighter-rouge&quot;&gt;{% for post in site.posts %}&lt;/code&gt;, and end with &lt;code class=&quot;highlighter-rouge&quot;&gt;{% endfor %}&lt;/code&gt;. Everything in between that will be displayed for every iteration, and we also get access to that &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; variable, which in this case, contains information related to the current post iteration.&lt;/p&gt;

&lt;p&gt;I’ll talk about creating posts later, but they also have a &lt;em&gt;front matter&lt;/em&gt; where you can create variables. Here, the &lt;code class=&quot;highlighter-rouge&quot;&gt;post.title&lt;/code&gt; is set in a &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; variable, in the post &lt;em&gt;front matter&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;post.url&lt;/code&gt; and the &lt;code class=&quot;highlighter-rouge&quot;&gt;post.date&lt;/code&gt; are also post-related variables, but they’re automatically created by Jekyll.&lt;/p&gt;

&lt;p&gt;At this point, I’m done with the pages for the site! Here’s how your Articles page should be looking on the browser:&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-04-16-how-i-built-my-blog-and-website-using-jekyll/jekyll-basic-site-articles.jpg&quot; alt=&quot;Jekyll basic site Articles page&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;Now let’s take a look at how to create new posts!&lt;/p&gt;

&lt;h3 id=&quot;creating-articles&quot;&gt;Creating articles&lt;/h3&gt;
&lt;p&gt;We already have that “Welcome to Jekyll”, so let’s and inspect what’s inside that file. All your posts should be inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory.&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;_posts/2019-04-12-welcome-to-jekyll.md&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title:  &quot;Welcome to Jekyll!&quot;
date:   2019-04-12 17:40:41 +0100
categories: jekyll update
---
You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run `jekyll serve`, which launches a web server and auto-regenerates your site when a file is updated.

(...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can see that this is basically the same thing we have on the &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt; and on the &lt;code class=&quot;highlighter-rouge&quot;&gt;articles.md&lt;/code&gt; pages. There’s a &lt;em&gt;front matter&lt;/em&gt; with some variables, and everything after that is the article content.&lt;/p&gt;

&lt;p&gt;Something important we should pay attention to is the format we use to name our post file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yyyy-mm-dd-title.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;They should start with &lt;strong&gt;4&lt;/strong&gt; digits for the year, &lt;strong&gt;2&lt;/strong&gt; for the month, &lt;strong&gt;2&lt;/strong&gt; for the day, and then the title. Everything should be separated by hyphens.&lt;/p&gt;

&lt;p&gt;In my case, I only use a &lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; variable:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: article
title: &quot;How I built my blog and website using Jekyll&quot;
---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are much more to know about this, but remember that I want this to be as simple as possible. If you want to know more, here’s the &lt;a href=&quot;https://jekyllrb.com/docs/posts/&quot;&gt;documentation for posts&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;using-drafts&quot;&gt;Using drafts&lt;/h4&gt;
&lt;p&gt;What happens if you’re still working on some articles, but they’re not ready to share yet? Enter: drafts.&lt;/p&gt;

&lt;p&gt;Remember that we created a &lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt; directory? Well, this is where your drafts will live. A draft is basically the same thing as a regular post file, but without a date in its filename.&lt;/p&gt;

&lt;p&gt;If you want to run the website with drafts, you just need to add a &lt;code class=&quot;highlighter-rouge&quot;&gt;--drafts&lt;/code&gt; flag when starting the server. Like this:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve &lt;span class=&quot;nt&quot;&gt;--drafts&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As easy as that!&lt;/p&gt;

&lt;h3 id=&quot;adding-the-styles&quot;&gt;Adding the styles&lt;/h3&gt;
&lt;p&gt;The last thing I want to cover here is how I added the styles for my website. In my case, I’ve used SCSS (but Sass works too) to do that. If you don’t know what Sass/SCSS is, it’s a CSS pre-processor that makes our lives much easier.&lt;/p&gt;

&lt;p&gt;There are so many resources available for you to learn it! Here a great &lt;a href=&quot;https://www.youtube.com/watch?v=roywYSEPSvc&quot;&gt;crash course video&lt;/a&gt;, for example.&lt;/p&gt;

&lt;p&gt;Now, 2 important things we need to do. First, we need to create a &lt;code class=&quot;highlighter-rouge&quot;&gt;css&lt;/code&gt; directory, inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; directory, and place a &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt; inside it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── assets
│   └── css
│       └── main.scss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;When Jekyll compiles this &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt; into our &lt;code class=&quot;highlighter-rouge&quot;&gt;main.css&lt;/code&gt;, it will place it inside the same directory, but in &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, this will result in something like this:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── _site
│   └── assets
│       └── css
│           └── main.css
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, what should we put inside our &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;First of all, it is required by Jekyll that we start the file with two lines of triple dashes, like the ones we use on the &lt;em&gt;front matter&lt;/em&gt;.&lt;/p&gt;

&lt;p class=&quot;code-caption&quot;&gt;assets/css/main.scss&lt;/p&gt;
&lt;div class=&quot;language-sass highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;1-base/base-main&quot;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;2-layout/layout-main&quot;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;@import&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;3-modules/modules-main&quot;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can write you Sass/SCSS right here, or use &lt;em&gt;sass partials&lt;/em&gt;. Think of &lt;em&gt;sass partials&lt;/em&gt; like the includes we used in our layouts. They are individual files that contain different parts of the website’s styles, and they live inside that &lt;code class=&quot;highlighter-rouge&quot;&gt;_sass&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;For example, here’s a basic structure for my SCSS files:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;├── _sass
│   ├── 1-base
│   │   └── _base-main.scss
│   ├── 2-layout
│   │   └── _layout-main.scss
│   └── 3-modules
│       └── _modules-main.scss
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Partials need to start with an “_”, and when importing them in our &lt;code class=&quot;highlighter-rouge&quot;&gt;main.scss&lt;/code&gt; file, we can omit both that and the “.scss” part.&lt;/p&gt;

&lt;p&gt;I don’t want to get into much details on this Sass/SCSS thing, because it would make this article even bigger, but I’m planning on writing another article just talking about that.&lt;/p&gt;

&lt;p&gt;And I guess that’s it! The website is done. My last step was to deploy this to Netlify so let’s take a quick look at how I’m doing it.&lt;/p&gt;

&lt;h3 id=&quot;deploying-to-netlify&quot;&gt;Deploying to Netlify&lt;/h3&gt;
&lt;p&gt;I’ve recently discovered &lt;a href=&quot;https://netlify.com&quot;&gt;Netlify&lt;/a&gt;, and I instantly became a fan of it. Netlify is basically a service that allows you to host static websites/apps, and you can even use a custom domain with an SSL/TLS Certificate to have HTTPS. All of this can be done for free! How cool is that?&lt;/p&gt;

&lt;p&gt;Let’s get started. First, go to &lt;a href=&quot;https://netlify.com&quot;&gt;Netlify’s website&lt;/a&gt; and create a new account. Once that’s done, you’re ready to deploy the website files.&lt;/p&gt;

&lt;p&gt;Now, there are a few ways to do this:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You can drag-and-drop a .zip in the Netlify dashboard&lt;/li&gt;
  &lt;li&gt;Deploy using Git, where you link a Github/Gitlab/Bitbucket repository, and then when you push to Git, Netlify builds the site for you (in our case it would run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Or, you can use the Netlify CLI, which allows you to deploy directly from your terminal.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In my case, I use this last option. Here’s how I do it.&lt;/p&gt;

&lt;h4 id=&quot;using-the-cli&quot;&gt;Using the CLI&lt;/h4&gt;
&lt;p&gt;To install the Netlify CLI, the only requirement is to have &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js&lt;/a&gt; installed. Once that’s done, you just need to run this in your terminal:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;netlify-cli &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now you have access to the &lt;code class=&quot;highlighter-rouge&quot;&gt;netlify&lt;/code&gt; command. So, in your terminal, navigate to your site’s directory and run&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netlify deploy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The CLI will now ask you if you want to link the directory to an existing site or create and configure a new site. Let’s go with this last option, and then you’ll go through the configuration.&lt;/p&gt;

&lt;p&gt;Remember to type &lt;code class=&quot;highlighter-rouge&quot;&gt;_site&lt;/code&gt; as your deploy path!&lt;/p&gt;

&lt;p&gt;Once you’re done with that, Netlify will generate a draft URL. You can also deploy it to production using this command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netlify deploy &lt;span class=&quot;nt&quot;&gt;--prod&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And this time, a new Live URL will be created. Congrats, you have your site live! Now, to use my own domain that I’ve already purchased, I just need to go into Netlify’s dashboard, go to my site’s settings, and add my domain.&lt;/p&gt;

&lt;p&gt;If you want to know a bit more about this, I recommend you to watch &lt;a href=&quot;https://www.youtube.com/watch?v=bjVUqvcCnxM&amp;amp;t=509s&quot;&gt;this video&lt;/a&gt; by Brad Traversy.&lt;/p&gt;

&lt;h3 id=&quot;a-conclusion&quot;&gt;A conclusion&lt;/h3&gt;
&lt;p&gt;Hope you find this useful! This turned out to be a pretty larger article than what I was planning, but I expect to write a few others to share the progress on my website and also some of the ways I’ll use Jekyll to my advantage!&lt;/p&gt;

&lt;p&gt;Also, keep in mind that I’m no expert developer, and I’m doing things my own way, which means that there are probably a few things that could’ve been made in a different/better way.&lt;/p&gt;

&lt;p&gt;See you next time 👋🏼&lt;/p&gt;</content><author><name></name></author><summary type="html">I’ve finally launched the blog here on my website! I wanted to do this for some time, because I want to start writing more and I want to build like an online home for myself, to host all my projects, my ideas, my thoughts, and even though I also share my words on Medium, it’s a good idea to have my own blog as well, so I can get full control.</summary></entry><entry><title type="html">Building Ana’s Website, Pt 3</title><link href="http://localhost:4000/articles/building-anas-website-pt-3" rel="alternate" type="text/html" title="Building Ana's Website, Pt 3" /><published>2019-03-07T00:00:00+00:00</published><updated>2019-03-07T00:00:00+00:00</updated><id>http://localhost:4000/articles/building-anas-website-pt-3</id><content type="html" xml:base="http://localhost:4000/articles/building-anas-website-pt-3">&lt;p&gt;Hey there, welcome to the 3rd part of this series that I’ve been writing, about building my friend &lt;a href=&quot;https://medium.com/@anarlguerra&quot;&gt;Ana Guerra&lt;/a&gt; a personal website.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.byvasco.com/articles/building-anas-website-pt-2&quot;&gt;On part 2&lt;/a&gt; we drafted all the required pages for the website: the About Me page, which works like a home page, the Podcast page, Blog, Newsletter and Contacts page.&lt;/p&gt;

&lt;p&gt;I have a good starting point. I’ve created a rough layout of how this might all look without using any images and colors, but I already used the two chosen typefaces (Raleway and InterUI).&lt;/p&gt;

&lt;p&gt;To be honest, me and Ana were pretty happy with what came out. So the next step is to give these grayscale compositions a bit of life!&lt;/p&gt;

&lt;h4 id=&quot;abouthome-page&quot;&gt;About/Home page&lt;/h4&gt;
&lt;p&gt;Starting from the beginning, this is how the About/Home page looks after going through it.&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-03-07-building-anas-website-pt-3/home-top.png&quot; alt=&quot;Ana's Website - Home page, top part.&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;Here we have the Hero, with an introduction to who Ana is and a big “Let’s Talk” call to action, that takes us to the Contact page once clicked. We also decided to add this confetti looking thing on the background with the emojis, to give this top section some color. The emojis are a TV, some headphones and an open book: the same emojis Ana uses on her newsletter.&lt;/p&gt;

&lt;p&gt;Above that, there’s the first content section: the Podcast, with the last 4 episodes and a link to the Podcast page.&lt;/p&gt;

&lt;p&gt;Each other section (Blog and Newsletter) will have these big repeated titles, with a text label in-between, indicating the sharing frequency. So for example, because Ana shares a new podcast episode around once per week, we wrote “An Episode a Week or So” in that label.&lt;/p&gt;

&lt;p&gt;Another detail is that the titles should be constantly moving, sliding from right to left, overflowing the page. I think this will make things look a bit more interesting.&lt;/p&gt;

&lt;p&gt;And because these sections are visually similar, I wanted to find a way to clearly divide them. I ended up with these big fat titles that work really well, creating a lot of contrast.&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-03-07-building-anas-website-pt-3/home-bottom.png&quot; alt=&quot;Ana's Website - Home page, bottom part.&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;The Newsletter section works as an introduction and clicking on the “Find Out More” button, we’ll be taken to the Newsletter page, with a bit more information. There’s also a small excerpt of a real Newsletter Ana shared on the right side, as you can see.&lt;/p&gt;

&lt;p&gt;The footer remained as it was before, with icons/links to all social media channels that Ana is at.&lt;/p&gt;

&lt;h4 id=&quot;podcast-and-blog-pages&quot;&gt;Podcast and Blog pages&lt;/h4&gt;
&lt;p&gt;These two pages basically follow the exact same layout, excluding the fact that the podcasts are in a 4 column grid, and the blog posts in a 3 column one.&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-03-07-building-anas-website-pt-3/podcast-blog.png&quot; alt=&quot;Ana's Website - Podcast and Blog pages.&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;It works perfectly for the purpose it has, and it fits the overall visual style for the website.&lt;/p&gt;

&lt;p&gt;Oh, and in these “interior” pages the titles are static&lt;/p&gt;

&lt;h4 id=&quot;newsletter-page&quot;&gt;Newsletter page&lt;/h4&gt;
&lt;p&gt;It follows the same 2 column layout from the Home page, but this time there’s a bit more information. The call-to-action remains the same, which takes us to the Whatsapp page to join it.&lt;/p&gt;

&lt;p&gt;Above that, we have a couple of bullet points giving some more details about the newsletter.&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-03-07-building-anas-website-pt-3/newsletter.png&quot; alt=&quot;Ana's Website - Newsletter page.&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;And here, the “demo” on the right side is actually scrollable, so instead of just a small excerpt, we have a full-size newsletter message.&lt;/p&gt;

&lt;h4 id=&quot;contact-page&quot;&gt;Contact page&lt;/h4&gt;
&lt;p&gt;Finally, there’s the Contact page, with a link to send Ana an email or to open her Twitter profile.&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2019-03-07-building-anas-website-pt-3/contact.png&quot; alt=&quot;Ana's Website - Contact page.&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;And on the bottom, her last 10 Instagram pictures or videos.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;We’re really liking how this came up. It’s simple, and not too much information so it’s straight to the point: Ana’s content.&lt;/p&gt;

&lt;h4 id=&quot;next-step-lets-code&quot;&gt;Next step: let’s code&lt;/h4&gt;
&lt;p&gt;So as you can imagine, the next step is to make this baby get out of Sketch and give it the life it deserves.&lt;/p&gt;

&lt;p&gt;The goal of all this is to make Ana’s content to be the main focus. And that content needs to be managed by its maker! So, for that reason, this is going to be transformed into a custom Wordpress theme.&lt;/p&gt;

&lt;p&gt;I’ll be honest: I’m not experienced in working with Wordpress development. I have no knowledge of what the best workflow is, or the best practices.&lt;/p&gt;

&lt;p&gt;At the moment I’m writing this (March 6), the front-end code is already created and I’m learning Wordpress development on the fly, but I’m confident I’ll be able to pull this off!&lt;/p&gt;

&lt;p&gt;See you soon! 👋🏼&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.byvasco.com/articles/building-anas-website-pt-2&quot;&gt;← Part 2&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Hey there, welcome to the 3rd part of this series that I’ve been writing, about building my friend Ana Guerra a personal website.</summary></entry><entry><title type="html">Building Ana’s Website, Pt 2</title><link href="http://localhost:4000/articles/building-anas-website-pt-2/" rel="alternate" type="text/html" title="Building Ana's Website, Pt 2" /><published>2018-12-23T00:00:00+00:00</published><updated>2018-12-23T00:00:00+00:00</updated><id>http://localhost:4000/articles/building-anas-website-pt-2</id><content type="html" xml:base="http://localhost:4000/articles/building-anas-website-pt-2/">&lt;p&gt;Onto the second part of this series where I’m creating a website for my friend Ana Guerra and documenting the process of doing so! To get some context of what’s going on, here’s the 1st part.&lt;/p&gt;

&lt;p&gt;She is also doing it on her podcast, here’s the first episode, the second one is coming soon.&lt;/p&gt;

&lt;h3 id=&quot;a-quick-recap-from-the-last-article&quot;&gt;A quick recap from the last article:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We know what kind of website this is and what the goal is — to serve as a digital home for all the content and projects Ana has.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And we also know all the pages needed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Decided on what direction to follow regarding look and feel for this.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Got the color palette and the main typeface.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;And finally, I created the folder structure on my computer for this project.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After this, I have kind of a clear idea of how the final product could look like.&lt;/p&gt;

&lt;h3 id=&quot;starting-out&quot;&gt;Starting out&lt;/h3&gt;
&lt;p&gt;First, a confession of a bad habit I have.&lt;/p&gt;

&lt;p&gt;Usually, in the starting phase of a project, I go straight to Google or Dribbble to grab some inspiration. I think this is a bad habit because I’m not exercising my mind to come up with an original solution for the given problem.&lt;/p&gt;

&lt;p&gt;But there’s also another side of the coin. I don’t believe in pure, 100% originality. Because I need some kind of influence.&lt;/p&gt;

&lt;p&gt;What I do believe is that I’m in a constant “sponge mode”. Constantly observing the world around me, the products and interfaces I interact with, the movies I watch and the books that I read. As a result, I’m building like a mental library of ideas that I can use in my work.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nJPERZDfyWc&quot;&gt;Everything is a Remix&lt;/a&gt; by Kirby Ferguson is a great video that relates to this line of thought.&lt;/p&gt;

&lt;p&gt;So, this time, I grabbed a pen and just sketched the ideas that were floating around in my head. Nothing fancy or stunning.&lt;/p&gt;

&lt;h3 id=&quot;to-the-screen&quot;&gt;To the screen&lt;/h3&gt;
&lt;p&gt;When I feel that I dumped all my ideas onto paper, I move to the computer, where I start to play around with typography and colors.&lt;/p&gt;

&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-1.png&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;However, my process is kind of organic. What I mean by this, is that I don’t follow a strict path or series of steps. I like to go back and forth between my notepad and my computer.&lt;/p&gt;

&lt;p&gt;It was at this time that I realized we should find a typeface for body copy.&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;a href=&quot;https://rsms.me/inter/&quot;&gt;
      &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-2.png&quot; /&gt;
    &lt;/a&gt;
  &lt;/figure&gt;

&lt;p&gt;Ana has been using &lt;a href=&quot;https://fonts.google.com/specimen/Raleway&quot;&gt;Raleway&lt;/a&gt; across all her assets, and I ended up finding &lt;a href=&quot;https://rsms.me/inter/&quot;&gt;Inter UI&lt;/a&gt;, a somewhat neutral looking typeface that was designed to be easily legible on computer screens. I love how they look when combined!&lt;/p&gt;

&lt;h3 id=&quot;creating-the-first-home-concept&quot;&gt;Creating the first Home concept&lt;/h3&gt;
&lt;p&gt;After exploring a bit, I started to make a basic mockup for the Home page.&lt;/p&gt;

&lt;p&gt;One thing that went through my mind was that, besides the blog posts, there’s not much text to put on the website. And I wanted to find a way to somehow use typography to keep things interesting but at the same time maintaining the clean and simple vibe to it.&lt;/p&gt;

&lt;p&gt;So I played around a bit and ended up creating this concept for the Home.&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-3.png&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;There’s no pictures or colors, I just wanted to figure out how I could layout the different sections to use the content we have using the chosen typefaces.&lt;/p&gt;

&lt;p&gt;Here’s a quick overview of its different parts, starting with the top section.&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-4.png&quot; /&gt;
    &lt;figcaption class=&quot;text-smaller caption&quot;&gt;The top section is as simple as it gets&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;p&gt;The header will have the same picture of Ana uses on all social media channels on the left, and a basic navigation menu on the right, with links to the other pages.&lt;/p&gt;

&lt;p&gt;I think the “Hello you” and the “This is Ana Guerra” blocks help to create some movement, instead of just having a straight, centered column of text. And it’s also the same way she introduces herself on the podcast, so we can keep that consistent here on the website!&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-5.png&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;Now, on those 3 sections (Podcast, Blog and Newsletter), the idea is that each title works as a divider between them, and while we’re scrolling through the page it slowly slides to the left.&lt;/p&gt;

&lt;p&gt;I think &lt;a href=&quot;https://fonts.google.com/specimen/Raleway&quot;&gt;Raleway&lt;/a&gt; looks great on larger sizes, especially on heavier weights, and it works wonders for this concept.&lt;/p&gt;

&lt;p&gt;This title part actually started with a dash in between the words. But then I had the idea of replacing that for a piece of text that communicates the posting frequency.&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-6.png&quot; /&gt;
    &lt;figcaption class=&quot;text-smaller caption&quot;&gt;The initial idea and a small change afterward&lt;/figcaption&gt;
  &lt;/figure&gt;

&lt;p&gt;I like it!&lt;/p&gt;

&lt;p&gt;The Newsletter section is a bit different than the other two.&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-7.png&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://chat.whatsapp.com/invite/H7NiyFlukld7scG6OuDnPp&quot;&gt;The newsletter&lt;/a&gt; is delivered through Whatsapp.&lt;/p&gt;

&lt;p&gt;So the idea here is to have like a mobile device on the right side, displaying the Whatsapp’s chat UI, on the left a button to join and another to the dedicated Newsletter page (which will also serve as a landing page) in order to get more information.&lt;/p&gt;

&lt;p&gt;To finish things up, there’s the footer.&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-12-23-building-anas-website-pt-2/image-8.png&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;It basically consists of a series of icons that link to all the different platforms where Ana is.&lt;/p&gt;

&lt;h3 id=&quot;inspiration&quot;&gt;Inspiration&lt;/h3&gt;
&lt;p&gt;Well, in this particular case I almost did no research to check out what’s currently out there, mainly because I got to that concept I showed you above pretty quickly after exploring for a few hours.&lt;/p&gt;

&lt;p&gt;I already had a list of 4 or 5 websites that served as a reference, that we collected on the first meeting we had. Other than that I only navigated a bit through my &lt;a href=&quot;https://www.pinterest.pt/vascogmm/typography/&quot;&gt;Typography Board on Pinterest&lt;/a&gt; and &lt;a href=&quot;http://typeonly.tumblr.com/&quot;&gt;Typeonly&lt;/a&gt; to get the creative juices flowing.&lt;/p&gt;

&lt;h3 id=&quot;communication-and-getting-feedback&quot;&gt;Communication and getting feedback&lt;/h3&gt;
&lt;p&gt;Me and Ana have been using Whatsapp to talk and to get her opinions and feedback regarding the work, I’ve been using &lt;a href=&quot;https://marvelapp.com/&quot;&gt;Marvel&lt;/a&gt; to do that job.&lt;/p&gt;

&lt;h3 id=&quot;next-things-to-do&quot;&gt;Next things to do&lt;/h3&gt;
&lt;p&gt;The next step is to create the mockups for all the remaining pages.&lt;/p&gt;

&lt;p&gt;Once I get all done, I’ll bring some colors in and take care of things in a more detailed level.&lt;/p&gt;

&lt;p&gt;See you soon in part 3! 👋🏼&lt;/p&gt;</content><author><name></name></author><summary type="html">Onto the second part of this series where I’m creating a website for my friend Ana Guerra and documenting the process of doing so! To get some context of what’s going on, here’s the 1st part.</summary></entry><entry><title type="html">Building Ana’s Website, Pt 1</title><link href="http://localhost:4000/articles/building-anas-website-pt-1" rel="alternate" type="text/html" title="Building Ana's Website, Pt 1" /><published>2018-11-17T00:00:00+00:00</published><updated>2018-11-17T00:00:00+00:00</updated><id>http://localhost:4000/articles/building-anas-website-pt-1</id><content type="html" xml:base="http://localhost:4000/articles/building-anas-website-pt-1">&lt;p&gt;Starting from the beginning. My friend Ana Guerra started thinking about creating a newsletter and we talked about creating some kind of landing page for that. However, there are a few more things she’s into — she also writes and has a podcast. So we thought we should take it a step further and just create a full website to serve as her personal home on the internet to house every project she has going on, and for future stuff as well!&lt;/p&gt;

&lt;p&gt;This is the beginning of a series where me and Ana will document the full process of building her website. I’ll write here on Medium and on my website, and she’s doing it on her podcast. &lt;a href=&quot;https://anchor.fm/anarlguerra/episodes/Vasco-is-building-my-website-EP-1-e2hfas/a-a698fv&quot;&gt;Here’s the first episode&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;After we landed on this conclusion, we met for a coffee after work to chat a bit about what this website should and shouldn’t do, and what content should be in there. Basically, we defined the general concept/idea.&lt;/p&gt;

&lt;h3 id=&quot;what-kind-of-website-will-this-be&quot;&gt;What kind of website will this be?&lt;/h3&gt;
&lt;p&gt;I would call this a personal website. On the home page there’s gonna be a short introduction of who Ana is and what she does, and then &lt;strong&gt;3 different sections&lt;/strong&gt; to showcase the different types of content she creates (podcast, the blog, and the newsletter), where the podcast and the blog sections will have the most recent episodes/posts.&lt;/p&gt;

&lt;p&gt;Besides the home page, there will be a few other pages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;a page specifically for the podcast with all the episodes
the blog, with all the blog posts&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;a page for the newsletter&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;a contact page&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;and in the future we might build a gear page, to showcase all the different equipment she uses on a daily basis&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;colors-typography-and-overall-feel&quot;&gt;Colors, typography, and overall feel&lt;/h3&gt;
&lt;p&gt;Ana has already defined the color palette for her brand, and she’s also been using Raleway as the main typeface, so that’s awesome. I might introduce another one a bit more neutral for body copy, but I still need to explore a bit on that.&lt;/p&gt;

&lt;p&gt;&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/assets/posts/2018-11-17-building-anas-website-pt-1/image-1.png&quot; /&gt;
  &lt;/figure&gt;

&lt;p&gt;I’m happy that the colors are pretty bright and vivid, because that reenforces who she is: a person full of energy and with lots of will to do stuff!&lt;/p&gt;

&lt;p&gt;Overall, the goal is to make this look simple, modern, young and to the point.&lt;/p&gt;

&lt;h3 id=&quot;first-steps&quot;&gt;First steps&lt;/h3&gt;
&lt;p&gt;The first thing I did was to create the folder structure on my computer. I have 4 different folders here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Docs&lt;/strong&gt;: where I’ll save all kinds of documents Ana sends me&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Assets&lt;/strong&gt;: for images, icons, etc&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Design&lt;/strong&gt;: this will be where all the Sketch files will live&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Shared&lt;/strong&gt;: the folder where I’ll put everything I want to share with Ana, like final designs, assets for her to use, etc.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This was highly inspired by &lt;a href=&quot;https://www.youtube.com/watch?v=TU_O9BOWyVE&amp;amp;ab_channel=JesseShowalter&quot;&gt;Jesse Showalter’s method&lt;/a&gt;. I recommend you to check out his channel for awesome design related content!&lt;/p&gt;

&lt;p&gt;What I also like to do is to create a couple of artboards in Sketch to build the color palette and even though in this case it’s nothing complex, I also like to create the sitemap.&lt;/p&gt;

&lt;p&gt;Lastly, I make sure I get all the written content that should be displayed on the website so that I can &lt;strong&gt;design around the content and not the other way around&lt;/strong&gt; — after all, the content is the most important thing!&lt;/p&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What’s next?&lt;/h3&gt;
&lt;p&gt;Ok so next I’ll be exploring a bit on pen and paper just to get my ideas going on how the layout could be.&lt;/p&gt;

&lt;p&gt;Another thing is to look for other people’s personal websites just to get a sense of what’s out there, and after that, it’s time to start designing!&lt;/p&gt;

&lt;p&gt;I’ll leave this for the next post, which shouldn’t take too long to come out.&lt;/p&gt;

&lt;p&gt;See you in part 2! 👋🏼&lt;/p&gt;</content><author><name></name></author><summary type="html">Starting from the beginning. My friend Ana Guerra started thinking about creating a newsletter and we talked about creating some kind of landing page for that. However, there are a few more things she’s into — she also writes and has a podcast. So we thought we should take it a step further and just create a full website to serve as her personal home on the internet to house every project she has going on, and for future stuff as well!</summary></entry><entry><title type="html">On Design and Fixing Old Cars</title><link href="http://localhost:4000/articles/on-design-and-fixing-old-cars" rel="alternate" type="text/html" title="On Design and Fixing Old Cars" /><published>2018-10-15T00:00:00+01:00</published><updated>2018-10-15T00:00:00+01:00</updated><id>http://localhost:4000/articles/on-design-and-fixing-old-cars</id><content type="html" xml:base="http://localhost:4000/articles/on-design-and-fixing-old-cars">&lt;!--
  Creates the image path.
  If there's no &quot;image-path&quot; parameter, use the post title instead.
  Image comes from &quot;assets/posts/&lt;date-title&gt;&quot;
--&gt;

&lt;p&gt;&lt;!-- This is just a regular image, coming from &quot;assets/images&quot; --&gt;
  &amp;lt;img
    src=”/assets/images/image-cover.png”&lt;/p&gt;

&lt;p&gt;/&amp;gt;&lt;/p&gt;

&lt;p&gt;So my car just broke something while I was driving — I’m literally writing this while on the side of a highway waiting for the tow truck to arrive, and I thought it would be a perfect time to write this article.&lt;/p&gt;

&lt;p&gt;My professional life is dedicated to creating and designing things, but like a lot of people, I have some hobbies as well. In my case, one of them happens to be messing around and fixing my own (old) cars.&lt;/p&gt;

&lt;p&gt;I like old cars because almost everything is made of mechanical parts and systems. I’m the owner of a 1990 Mk2 Golf that is currently being restored, and my daily car, a 1993 Honda Civic that went through a small restoration a few months ago as well.&lt;/p&gt;

&lt;p&gt;The interesting part is that, with time, I’ve realized that there are a few concepts that are present and apply to both my work and this hobby of mine.&lt;/p&gt;

&lt;h4 id=&quot;be-patient&quot;&gt;Be patient&lt;/h4&gt;
&lt;p&gt;I choose this one to be the first on the list because I struggle a bit with it. Patience, in my opinion, is something that is kind of difficult to have (at least for me), but the return of actually having it is pretty good.&lt;/p&gt;

&lt;p&gt;Every time I rush things I will probably end up with poor design work or something in my car that won’t work properly.&lt;/p&gt;

&lt;p&gt;However, if I have the patience, and if I take the time to at least try to do things right, I’ll probably end up with better results.&lt;/p&gt;

&lt;h4 id=&quot;stay-positive&quot;&gt;Stay positive&lt;/h4&gt;
&lt;p&gt;As you can imagine, it’s not a great feeling to be on the side of a highway with a broken car, not knowing what the problem is, and not knowing how much money it will cost to fix it.&lt;/p&gt;

&lt;p&gt;Now, I only have a couple of mindsets I can have here: a negative, and a positive one.&lt;/p&gt;

&lt;p&gt;Negative thinking would lead me to complain about how crap this car is (and it’s not, actually), or about the fact that I hadn’t had a meal in 5 hours and I’m slowly starving waiting for the tow truck to arrive.&lt;/p&gt;

&lt;p&gt;The thing is: I have no control over this situation, and if there’s anything I can do about it, I’m sure complaining is not one of it.&lt;/p&gt;

&lt;p&gt;I have one option, though: I can filter something positive out of this situation.&lt;/p&gt;

&lt;p&gt;“Ok, it sucks to be here. But at least I have my laptop here with me and I can start to write this article!”&lt;/p&gt;

&lt;p&gt;In my design work I also try to keep a positive mindset. Because I’m aware that positivity attracts positivity. That way, I feel more creative, happier and more optimistic.&lt;/p&gt;

&lt;h4 id=&quot;use-mistakes-as-a-learning-experiences&quot;&gt;Use mistakes as a learning experiences&lt;/h4&gt;
&lt;p&gt;One night, I was trying to change the starter engine of my Golf.&lt;/p&gt;

&lt;p&gt;It was my first time doing it and I ended up fucking things up — due to the way the starter engine is mounted, it was helping the car’s engine to stay in its place. So, as I removed the last bolt, the engine literally fell down a few centimeters, and as it did that, an electrical plug disconnected (and I haven’t realized that). I was able to install a new starter, but when I gave ignition, the car didn’t start.&lt;/p&gt;

&lt;p&gt;This happened at around 3 AM. I was working on the road, I was tired and frustrated, so I ended up “giving up” that night.&lt;/p&gt;

&lt;p&gt;The next day, a friend of mine went with me to try and see what the problem was. Well, in just 5 minutes of looking at the engine bay, he quickly found that electrical plug that had disconnected, which was preventing the car from starting. The plug was connected, and the car immediately started.&lt;/p&gt;

&lt;p&gt;I was clearly clueless about this, mainly because it was the first time I was changing a starter. My mistake was basic: I didn’t support the car’s engine before doing anything else. But now I learned, and I can certainly assure that this won’t happen again.&lt;/p&gt;

&lt;p&gt;We all make mistakes, and as a young designer, I’m obviously making a lot. But the key is to take responsibility, take a step back, see what went wrong, and learn from it.&lt;/p&gt;

&lt;h4 id=&quot;dont-force-it&quot;&gt;Don’t force it&lt;/h4&gt;
&lt;p&gt;This one will be short: rule of thumb, if a bolt, for example, needs to be forced to be installed, I’m probably doing something wrong and I might end up breaking or damaging something.&lt;/p&gt;

&lt;p&gt;As a designer, I can apply this when talking about inspiration. If I’m not feeling inspired, I think there’s no way of forcing good work to come out. Might as well take a break, go read a book, watch a video or even get out of the house for some fresh air.&lt;/p&gt;

&lt;h4 id=&quot;everythings-better-in-my-head&quot;&gt;Everything’s better in my head&lt;/h4&gt;
&lt;p&gt;When my Civic (my daily car) went for a paint job, I was already imagining it with its new color, with a perfect coat of fresh and shiny paint.&lt;/p&gt;

&lt;p&gt;Everything was perfect in my head.&lt;/p&gt;

&lt;p&gt;Now, for the price I paid, it wasn’t even a realistic thought. When the car came from the paint job I quickly spotted some details that were not as I wanted, and that was bugging me a lot.&lt;/p&gt;

&lt;p&gt;The thing is: generally speaking, it was actually pretty good! But in my head, I could only think about those details.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;I’ve created unrealistic expectations&lt;/strong&gt;, and the final result was not matching them.&lt;/p&gt;

&lt;p&gt;Whenever I think of an idea for a website, an app, or something else, it always seems better in my head then what will look like after the design is done.&lt;/p&gt;

&lt;p&gt;In my opinion, it comes down to accepting it and not creating those huge expectations that lead to disappointment.&lt;/p&gt;</content><author><name></name></author><summary type="html">&amp;lt;img src=”/assets/images/image-cover.png” /&amp;gt;</summary></entry></feed>